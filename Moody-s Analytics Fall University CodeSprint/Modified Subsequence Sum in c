#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

long int modifiedSubsequenceSum(int n, int k, long int* A) {
     long int sum=0,x,y=0,max=A[0];
    int i=-1,j=0;
    bool flag=true;
    while(j<n)
    { if(max<A[j])
        max=A[j];
        if(A[j]>=0)
            break;
        j++;
    }
    i=j-1;
    while(j<n)
    {if(max<A[j])
        max=A[j];
        if(A[j]>0)
          {flag=false;
            y=y+A[j];
            x=(sum+A[j]-(k*(j-i-1)*(j-i-1)));
            if(y>x)
             sum=y;
            else
            {
              sum=x;
              y=sum;
            }     
            i=j;
            j++;
           
        }
        else
        {y=sum+A[j];
            j++;
        }
    }
    if(sum<max)
        sum=max;
    else if(flag)
        sum=max;
    return sum;
}

int main() {
    int n; 
    int k; 
    scanf("%i %i", &n, &k);
    long int *A = malloc(sizeof(long int) * n);
    for (int A_i = 0; A_i < n; A_i++) {
       scanf("%li",&A[A_i]);
    }
    long int result = modifiedSubsequenceSum(n, k, A);
    printf("%ld\n", result);
    return 0;
}
